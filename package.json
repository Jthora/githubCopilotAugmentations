{
  "name": "copilot-macros",
  "displayName": "Copilot Macros",
  "description": "High-leverage prompt macros (Self Dialogue, Critique Pass) for GitHub Copilot in VS Code.",
  "version": "0.0.2",
  "publisher": "your-publisher-id",
  "license": "MIT",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Other"
  ],
  "main": "dist/src/extension.js",
  "contributes": {
    "configuration": {
      "title": "Copilot Macros",
      "properties": {
        "copilotMacros.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show status bar macro shortcut"
        },
        "copilotMacros.statusBarMacro": {
          "type": "string",
          "default": "selfDialogue",
          "description": "Macro id used for status bar button"
        },
        "copilotMacros.enableSidebar": {
          "type": "boolean",
          "default": true,
          "description": "Enable the macro sidebar view"
        },
        "copilotMacros.enableContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Enable editor context menu entries"
        },
        "copilotMacros.largeSelectionWarningLines": {
          "type": "number",
          "default": 400,
          "description": "Warn if selection exceeds this many lines (soft warning)"
        },
        "copilotMacros.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose debug logging to OutputChannel"
        },
        "copilotMacros.includeBuiltIns": {
          "type": "boolean",
          "default": true,
          "description": "Include built-in macros alongside user-defined ones from .copilot-macros.json"
        }
      }
    },
    "commands": [
      {
        "command": "copilotMacros.selfDialogue",
        "title": "Copilot: Self Dialogue"
      },
      {
        "command": "copilotMacros.critique",
        "title": "Copilot: Critique Pass"
      },
      {
        "command": "copilotMacros.cycleStatusBarMacro",
        "title": "Copilot: Cycle Status Bar Macro"
      },
      {
        "command": "copilotMacros.pickMacro",
        "title": "Copilot: Pick Macro"
      },
      {
        "command": "copilotMacros.previewPrompt",
        "title": "Copilot: Preview Macro Prompt"
      },
      {
        "command": "copilotMacros.reloadMacros",
        "title": "Copilot: Reload Macros From Config"
      },
      {
        "command": "autopilot.patterns.list",
        "title": "Autopilot: List Patterns"
      },
      {
        "command": "autopilot.patterns.validate",
        "title": "Autopilot: Validate Patterns"
      },
      {
        "command": "autopilot.guardrails.dryRun",
        "title": "Autopilot: Guardrail Pipeline Dry Run"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "copilotMacrosContainer",
          "title": "Copilot Macros",
          "icon": "resources/robot.svg"
        }
      ]
    },
    "views": {
      "copilotMacrosContainer": [
        {
          "id": "copilotMacrosView",
          "name": "Macros",
          "icon": "resources/robot.svg"
        }
      ]
    },
    "keybindings": [
      {
        "command": "copilotMacros.selfDialogue",
        "key": "cmd+alt+d",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "copilotMacros.critique",
        "key": "cmd+alt+c",
        "when": "editorTextFocus && !editorReadonly"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "copilotMacros.selfDialogue",
          "when": "editorTextFocus && config.copilotMacros.enableContextMenu && editorHasSelection",
          "group": "navigation@10"
        },
        {
          "command": "copilotMacros.critique",
          "when": "editorTextFocus && config.copilotMacros.enableContextMenu",
          "group": "navigation@11"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "lint": "eslint . --ext .ts",
    "test": "npm run build && mocha --timeout 10000 --require ts-node/register test/**/*.test.ts",
    "test:integration": "npm run build && node ./scripts/run-integration-tests.js"
  },
  "devDependencies": {
    "@types/chai": "^5.2.2",
    "@types/mocha": "^10.0.0",
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "@vscode/test-electron": "^2.4.0",
    "chai": "^5.2.1",
    "eslint": "^8.57.0",
    "mocha": "^10.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.0",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "yaml": "^2.5.0"
  }
}
